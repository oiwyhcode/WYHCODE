#include "Trace_PID.h"

uint8_t Read_GPIO(uint8_t pin){
	return HAL_GPIO_ReadPin(GPIOE, pin);
}
uint8_t state[5]={Read_GPIO(out5_Pin),Read_GPIO(out4_Pin),Read_GPIO(out3_Pin),
		Read_GPIO(out2_Pin),Read_GPIO(out1_Pin)};
void PID_Trace_init(PID_Trace *pid,float target_val,float Kp,float Ki,float Kd)
{
	pid->target_val=target_val;
	pid->Kp = Kp;
	pid->Ki = Ki;
	pid->Kd = Kd;


}


float Trace_error(void){
	float Error=(-2*state[0])+(-1*state[1])+(0*state[2])+(1*state[3])+(2*state[4]);
    return Error;
}

void PID_Trace_realize(PID_Trace *pid, float CurrentValue) {
    // 1. 计算当前误差
    pid->Error = pid->target_val - CurrentValue;

    // 2. 计算积分项 (带积分限幅，防止积分饱和)
    pid->Integral += pid->Error;
    if (pid->Integral > 500) pid->Integral = 500;
    if (pid->Integral < -500) pid->Integral = -500;

    // 3. 计算微分项
    float derivative = pid->Error - pid->LastError;

    // 4. 计算总输出
    pid->output_val = (pid->Kp * pid->Error) +
                  (pid->Ki * pid->Integral) +
                  (pid->Kd * derivative);

    // 5. 更新上次误差
    pid->LastError = pid->Error;
}

